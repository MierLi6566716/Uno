import tkinter as tk
from tkinter import Label
import random

def initializeDeck() -> list:
    """Initialize a shuffled UNO deck."""
    deck = []
    values = [0,1,2,3,4,5,6,7,8,9, "SKIP", "DRAW TWO"]
    colors = ["RED", "GREEN", "YELLOW", "BLUE"]
    for color in colors:
        for value in values:
            card = f"{color} {value}"
            deck.append(card)
    random.shuffle(deck)
    return deck
"""
# Function to handle the "Shuffle" button click event
def shuffleDeck():
    initializeDeck()  # Shuffle the deck without displaying the contents

# Create the main application window
root = tk.Tk()
root.title("UNO Deck Shuffler")

# Set the background color (you can replace "lightblue" with the color you prefer)
root.configure(bg="red")

# Create a custom-styled "Shuffle" button
init_button = tk.Button(root, text="Shuffle", command=initializeDeck)
init_button.pack()

root.mainloop()
"""

def displayPlayerHand(hand) -> list:
    """Print the player's cards"""
    print("YOUR HAND: ")
    track = 0
    for card in hand:
        track += 1
        print(f"{track}. {card}")

def draw(cards) -> list:
    """Draw card function"""
    drawn = []
    for card in range(cards):
        drawn.append(initializeDeck().pop(0))
    return drawn

turn = 0
win = False 
playerDeck = draw(7)
AIDeck = draw(7)
bottom = []
bottom.append(initializeDeck().pop(0))


while win == False:
    properties = bottom[len(bottom) - 1].split(" ", 1)
    deckColor = properties[0]
    deckValue = properties[1]
    displayPlayerHand(playerDeck)
    print(f"TOP CARD: {bottom[-1]}")
    playerInput = int(input("YOUR TURN: "))
    if playerInput > len(playerDeck):
        print("THIS CARD DOES NOT EXIST, TRY AGAIN")
    else:
        handColor = playerDeck[(playerInput-1)].split(" ", 1)[0]
        handValue = playerDeck[(playerInput-1)].split(" ", 1)[1]
        print(bottom)
        print(deckColor, deckValue)
        print(handColor, handValue)
        if (deckColor == handColor) or (deckValue == handValue):   
            bottom.append(playerDeck.pop(playerInput-1))
        else:
            playerDeck.extend(draw(1))
        print(playerDeck)
    if (len(playerDeck) == 0):
        win == True
